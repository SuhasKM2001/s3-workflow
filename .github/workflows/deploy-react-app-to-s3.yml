name: Deploy React App to S3

on:
  workflow_dispatch:
    inputs:
      s3BucketName:
        description: 'Name of the S3 bucket'
        required: true
      awsRegion:
        description: 'AWS Region for the bucket'
        required: true
      newRepoUrl:
        description: 'URL of the newly created repository'
        required: true

jobs:
  deploy_to_s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.newRepoUrl }}
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ github.event.inputs.awsRegion }}

      - name: Check if S3 Bucket Exists
        id: check-bucket
        run: |
          if aws s3 ls "s3://${{ github.event.inputs.s3BucketName }}" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "BUCKET_EXISTS=false" >> $GITHUB_ENV
          else
            echo "BUCKET_EXISTS=true" >> $GITHUB_ENV
          fi

      - name: Create S3 Bucket if Not Exists
        if: env.BUCKET_EXISTS == 'false'
        run: |
          if [[ "${{ github.event.inputs.awsRegion }}" == "us-east-1" ]]; then
            aws s3api create-bucket --bucket ${{ github.event.inputs.s3BucketName }}
          else
            aws s3api create-bucket --bucket ${{ github.event.inputs.s3BucketName }} --create-bucket-configuration LocationConstraint=${{ github.event.inputs.awsRegion }}
          fi

      - name: Disable Block Public Access
        run: |
          aws s3api put-public-access-block --bucket ${{ github.event.inputs.s3BucketName }} --public-access-block-configuration \
          '{"BlockPublicAcls": false, "IgnorePublicAcls": false, "BlockPublicPolicy": false, "RestrictPublicBuckets": false}'

      - name: Enable Static Website Hosting
        run: |
          aws s3 website s3://${{ github.event.inputs.s3BucketName }} --index-document index.html

      - name: Set S3 Bucket Policy for Public Access
        run: |
          cat > bucket-policy.json <<EOL
          {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": "*",
                      "Action": "s3:GetObject",
                      "Resource": "arn:aws:s3:::${{ github.event.inputs.s3BucketName }}/*"
                  }
              ]
          }
          EOL
          aws s3api put-bucket-policy --bucket ${{ github.event.inputs.s3BucketName }} --policy file://bucket-policy.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Build React App
        run: |
          npm install
          npm run build

      - name: Upload Build Files to S3
        run: |
          aws s3 sync build/ s3://${{ github.event.inputs.s3BucketName }} --delete

      - name: Display Website URL
        run: |
          echo "Deployment URL: http://${{ github.event.inputs.s3BucketName }}.s3-website-${{ github.event.inputs.awsRegion }}.amazonaws.com"
